{"ast":null,"code":"var _jsxFileName = \"/Users/owenbarrott/Documents/nodeProjects/employees/client/src/components/FetchEmployees.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react'; //import RandomUser from '../apis/RandomUser';\n\nimport axios from 'axios';\nimport EmployeeFinder from '../apis/EmployeeFinder';\nimport { EmployeesContext } from '../contexts/EmployeesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchEmployees = () => {\n  _s();\n\n  const {\n    addEmployees\n  } = useContext(EmployeesContext);\n\n  const handleClick = async e => {\n    e.preventDefault();\n\n    const hide = () => {\n      var div = document.getElementById('fetchButton');\n      div.style.display = 'none';\n    };\n\n    var i = 0;\n\n    while (i < 1) {\n      await randomUserGenerator();\n      await i++;\n    }\n  };\n\n  const randomUserGenerator = async () => {\n    await fetch('https://randomuser.me/api/?results=100').then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      data.results.map(employee => {\n        const firstName = employee.name.first;\n        const lastName = employee.name.last;\n        const email = employee.email;\n        const streetNumber = employee.location.street.number;\n        const streetName = employee.location.street.name;\n        const city = employee.location.city;\n        const state = employee.location.state;\n        const country = employee.location.country;\n        const postalCode = employee.location.postcode;\n        const dateOfBirth = employee.dob.date;\n        const phoneNumber = employee.phone;\n        const cellNumber = employee.cell;\n        const pictureLarge = employee.picture.large;\n        const pictureThumbnail = employee.picture.thumbnail;\n\n        const finishCreatingData = async () => {\n          try {\n            const response = EmployeeFinder.post('/', {\n              first_name: firstName,\n              last_name: lastName,\n              email: email,\n              street_number: streetNumber,\n              street_name: streetName,\n              city,\n              state,\n              country,\n              postal_code: postalCode,\n              date_of_birth: dateOfBirth,\n              phone_number: phoneNumber,\n              cell_number: cellNumber,\n              picture_large: pictureLarge,\n              picture_thumbnail: pictureThumbnail\n            });\n            addEmployees(response.data.data.employee);\n            console.log(response);\n          } catch (error) {\n            console.log(error);\n          }\n        };\n\n        finishCreatingData();\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        id: \"fetchButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          type: \"button\",\n          id: \"fetch\",\n          className: \"btn btn-primary\",\n          children: \"Fetch Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FetchEmployees, \"a56ldOYpRNeLs6V0e6sGiiucqww=\");\n\n_c = FetchEmployees;\nexport default FetchEmployees;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchEmployees\");","map":{"version":3,"sources":["/Users/owenbarrott/Documents/nodeProjects/employees/client/src/components/FetchEmployees.jsx"],"names":["React","useState","useContext","axios","EmployeeFinder","EmployeesContext","FetchEmployees","addEmployees","handleClick","e","preventDefault","hide","div","document","getElementById","style","display","i","randomUserGenerator","fetch","then","response","json","data","console","log","results","map","employee","firstName","name","first","lastName","last","email","streetNumber","location","street","number","streetName","city","state","country","postalCode","postcode","dateOfBirth","dob","date","phoneNumber","phone","cellNumber","cell","pictureLarge","picture","large","pictureThumbnail","thumbnail","finishCreatingData","post","first_name","last_name","street_number","street_name","postal_code","date_of_birth","phone_number","cell_number","picture_large","picture_thumbnail","error"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\n//import RandomUser from '../apis/RandomUser';\nimport axios from 'axios';\nimport EmployeeFinder from '../apis/EmployeeFinder';\nimport { EmployeesContext } from '../contexts/EmployeesContext';\n\nconst FetchEmployees = () => {\n  const { addEmployees } = useContext(EmployeesContext);\n  \nconst handleClick = async (e) => {\n  e.preventDefault();\n\n  const hide = () => {\n    var div = document.getElementById('fetchButton');\n    div.style.display = 'none';\n  }\n    var i = 0;\n\n    while (i<1) {\n      await randomUserGenerator()\n      await i++;}\n};\n\nconst randomUserGenerator = async () => {\n  await fetch('https://randomuser.me/api/?results=100')\n  .then((response) => {\n      return response.json()\n  }).then((data) => {\n      console.log(data)\n      data.results.map(employee => {\n      const firstName = employee.name.first;\n      const lastName = employee.name.last;\n      const email = employee.email;\n      const streetNumber = employee.location.street.number;\n      const streetName = employee.location.street.name;\n      const city = employee.location.city;\n      const state = employee.location.state;\n      const country = employee.location.country;\n      const postalCode = employee.location.postcode;\n      const dateOfBirth = employee.dob.date;\n      const phoneNumber = employee.phone;\n      const cellNumber = employee.cell;\n      const pictureLarge = employee.picture.large;\n      const pictureThumbnail = employee.picture.thumbnail;      \n\n      const finishCreatingData = async () => {\n        try {\n          const response = EmployeeFinder.post('/', {\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        street_number: streetNumber,\n        street_name: streetName, \n        city, \n        state, \n        country, \n        postal_code: postalCode,\n        date_of_birth: dateOfBirth,\n        phone_number: phoneNumber,\n        cell_number: cellNumber,\n        picture_large: pictureLarge,\n        picture_thumbnail: pictureThumbnail\n\n      });\n      addEmployees(response.data.data.employee)\n      console.log(response);\n        } catch (error) {\n            console.log(error);\n        }\n      \n    }\n    finishCreatingData();\n  }\n    );\n  })\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <form action=\"\">\n        <div className=\"form-row\" id=\"fetchButton\">\n            <button onClick={handleClick} type=\"button\" id=\"fetch\" className=\"btn btn-primary\">Fetch Employees</button>\n          </div>\n        </form>\n      </div>\n    );\n};\n\nexport default FetchEmployees;"]},"metadata":{},"sourceType":"module"}