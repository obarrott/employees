{"ast":null,"code":"var _jsxFileName = \"/Users/owenbarrott/Documents/nodeProjects/employees/client/src/components/FetchEmployees.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react'; //import RandomUser from '../apis/RandomUser';\n\nimport EmployeeFinder from '../apis/EmployeeFinder';\nimport { EmployeesContext } from '../contexts/EmployeesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchEmployees = () => {\n  _s();\n\n  const {\n    addEmployees,\n    clearDatabase\n  } = useContext(EmployeesContext);\n\n  const handleReset = () => {\n    const response = EmployeeFinder.delete('/1');\n    clearDatabase();\n    console.log(response);\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    var i = 0;\n\n    while (i < 1) {\n      await randomUserGenerator();\n      await i++;\n    }\n  };\n\n  const randomUserGenerator = async () => {\n    await fetch('https://randomuser.me/api/?results=100').then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      data.results.map(employee => {\n        const finishCreatingData = async () => {\n          try {\n            const response = await EmployeeFinder.post('/', {\n              first_name: employee.name.first,\n              last_name: employee.name.last,\n              email: employee.email,\n              street_number: employee.location.street.number,\n              street_name: employee.location.street.name,\n              city: employee.location.city,\n              state: employee.location.state,\n              country: employee.location.country,\n              postal_code: employee.location.postcode,\n              date_of_birth: employee.dob.date,\n              phone_number: employee.phone,\n              cell_number: employee.cell,\n              picture_large: employee.picture.large,\n              picture_thumbnail: employee.picture.thumbnail\n            }); //console.log(response);\n\n            addEmployees(response.data.data.employee);\n          } catch (error) {\n            console.log(error);\n          }\n        };\n\n        finishCreatingData();\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        id: \"fetchButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          type: \"button\",\n          id: \"fetch\",\n          className: \"btn btn-primary\",\n          children: \"Populate Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReset,\n            type: \"button\",\n            id: \"1\",\n            className: \"btn btn-primary\",\n            children: \"Clear Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FetchEmployees, \"lWRtn8uuC1U1kFm03nT53VfI35Q=\");\n\n_c = FetchEmployees;\nexport default FetchEmployees;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchEmployees\");","map":{"version":3,"sources":["/Users/owenbarrott/Documents/nodeProjects/employees/client/src/components/FetchEmployees.jsx"],"names":["React","useContext","EmployeeFinder","EmployeesContext","FetchEmployees","addEmployees","clearDatabase","handleReset","response","delete","console","log","handleClick","e","preventDefault","i","randomUserGenerator","fetch","then","json","data","results","map","employee","finishCreatingData","post","first_name","name","first","last_name","last","email","street_number","location","street","number","street_name","city","state","country","postal_code","postcode","date_of_birth","dob","date","phone_number","phone","cell_number","cell","picture_large","picture","large","picture_thumbnail","thumbnail","error"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\n//import RandomUser from '../apis/RandomUser';\nimport EmployeeFinder from '../apis/EmployeeFinder';\nimport { EmployeesContext } from '../contexts/EmployeesContext';\n\nconst FetchEmployees = () => {\n  const { addEmployees, clearDatabase } = useContext(EmployeesContext);\n\nconst handleReset = () => {\n    const response = EmployeeFinder.delete('/1');\n    clearDatabase();\n    console.log( response);\n};\n\nconst handleClick = async (e) => {\n  e.preventDefault();\n    var i = 0;\n\n    while (i<1) {\n      await randomUserGenerator()\n      await i++;}\n};\n\nconst randomUserGenerator = async () => {\n  await fetch('https://randomuser.me/api/?results=100')\n  .then((response) => {\n      return response.json()\n  }).then((data) => {\n      console.log(data)\n      data.results.map(employee => {    \n\n      const finishCreatingData = async () => {\n        try {\n          const response = await EmployeeFinder.post('/', {\n        first_name: employee.name.first,\n        last_name: employee.name.last,\n        email: employee.email,\n        street_number: employee.location.street.number,\n        street_name: employee.location.street.name, \n        city: employee.location.city, \n        state: employee.location.state,\n        country: employee.location.country, \n        postal_code: employee.location.postcode,\n        date_of_birth: employee.dob.date,\n        phone_number: employee.phone,\n        cell_number: employee.cell,\n        picture_large: employee.picture.large,\n        picture_thumbnail: employee.picture.thumbnail\n\n      }\n      );\n      //console.log(response);\n      addEmployees(response.data.data.employee);\n        } catch (error) {\n            console.log(error);\n        }\n      \n    }\n    finishCreatingData();\n  }\n    );\n  })\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <form action=\"\">\n        <div className=\"form-row\" id=\"fetchButton\">\n            <button onClick={handleClick} type=\"button\" id=\"fetch\" className=\"btn btn-primary\">Populate Database</button>\n            <div className=\"col-md-5\">\n            <button onClick={handleReset} type=\"button\" id=\"1\" className=\"btn btn-primary\">Clear Database</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n};\n\nexport default FetchEmployees;"]},"metadata":{},"sourceType":"module"}