{"ast":null,"code":"var _jsxFileName = \"/Users/owenbarrott/Documents/nodeProjects/employees/client/src/components/EmployeeList.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport EmployeeFinder from '../apis/EmployeeFinder';\nimport RandomUser from '../apis/RandomUser';\nimport { EmployeesContext } from '../contexts/EmployeesContext';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchEmployees = () => {\n  _s();\n\n  useEffect(async () => {\n    const fetchData = async () => {\n      try {\n        const response = await RandomUser.get('/');\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }, []);\n};\n\n_s(FetchEmployees, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = FetchEmployees;\n\nconst EmployeeList = () => {\n  _s2();\n\n  const {\n    employees,\n    setEmployees\n  } = useContext(EmployeesContext);\n  let history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await EmployeeFinder.get(\"/\");\n        setEmployees(response.data.data.employees);\n        console.log(response); //This puts the end of the url on the url from RestaurantFinder.\n      } catch (error) {\n        console.log(error);\n      }\n\n      ;\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \".bg-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees && employees.map(employee => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [employee.first_name, \" \", employee.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(EmployeeList, \"P0efyuVu3k8suNdRaUp+KdmMBzk=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = EmployeeList;\nexport default EmployeeList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FetchEmployees\");\n$RefreshReg$(_c2, \"EmployeeList\");","map":{"version":3,"sources":["/Users/owenbarrott/Documents/nodeProjects/employees/client/src/components/EmployeeList.jsx"],"names":["React","useEffect","useContext","EmployeeFinder","RandomUser","EmployeesContext","useHistory","FetchEmployees","fetchData","response","get","console","log","error","EmployeeList","employees","setEmployees","history","data","map","employee","first_name","last_name","email","city","country","id"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext} from 'react';\nimport EmployeeFinder from '../apis/EmployeeFinder';\nimport RandomUser from '../apis/RandomUser';\nimport { EmployeesContext } from '../contexts/EmployeesContext';\nimport { useHistory } from 'react-router-dom';\n\n\nconst FetchEmployees = () => {\n\n    useEffect(async () => {\n        const fetchData = async () => {\n            try {\n                const response = await RandomUser.get('/');\n                console.log(response);\n            } catch (error) {\n            console.log (error);\n        }\n        }\n},[]);}\n\n\n\nconst EmployeeList = () => {\n    const {employees, setEmployees} = useContext(EmployeesContext);\n    let history = useHistory();\n    useEffect(() => {\n            const fetchData = async () => {\n\n            try {\n                const response = await EmployeeFinder.get(\"/\");\n                setEmployees(response.data.data.employees);\n                console.log(response); //This puts the end of the url on the url from RestaurantFinder.\n            } catch (error) {\n                console.log(error);\n            };\n        };\n        fetchData();\n    },[]);\n\n    return (\n        <div className=\"list-group\">\n                <table className=\"table table-hover table-striped\">\n                    <thead>\n                        <tr className=\".bg-primary\">\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">City</th>\n                            <th scope=\"col\">Country</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {employees && employees.map((employee) => {\n                            return (\n                                <tr key={employee.id}>\n                                    <td>{employee.first_name} {employee.last_name}</td>\n                                    <td>{employee.email}</td>\n                                    <td>{employee.city}</td>\n                                    <td>{employee.country}</td>\n                                </tr>\n                                )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n    );\n};\n\nexport default EmployeeList;"]},"metadata":{},"sourceType":"module"}