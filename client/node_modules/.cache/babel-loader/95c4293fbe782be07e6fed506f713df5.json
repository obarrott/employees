{"ast":null,"code":"var _jsxFileName = \"/Users/owenbarrott/Documents/nodeProjects/employees/client/src/components/FetchEmployees.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react'; //import RandomUser from '../apis/RandomUser';\n\nimport EmployeeFinder from '../apis/EmployeeFinder';\nimport { EmployeesContext } from '../contexts/EmployeesContext';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchEmployees = () => {\n  _s();\n\n  const {\n    addEmployees\n  } = useContext(EmployeesContext);\n\n  const handleReset = () => {\n    const response = router.get('/clear');\n    console.log(response);\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    var i = 0;\n\n    while (i < 1) {\n      await randomUserGenerator();\n      await i++;\n    }\n  };\n\n  const randomUserGenerator = async () => {\n    await fetch('https://randomuser.me/api/?results=3500').then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      data.results.map(employee => {\n        const firstName = employee.name.first;\n        const lastName = employee.name.last;\n        const email = employee.email;\n        const streetNumber = employee.location.street.number;\n        const streetName = employee.location.street.name;\n        const city = employee.location.city;\n        const state = employee.location.state;\n        const country = employee.location.country;\n        const postalCode = employee.location.postcode;\n        const dateOfBirth = employee.dob.date;\n        const phoneNumber = employee.phone;\n        const cellNumber = employee.cell;\n        const pictureLarge = employee.picture.large;\n        const pictureThumbnail = employee.picture.thumbnail;\n\n        const finishCreatingData = async () => {\n          try {\n            const response = await EmployeeFinder.post('/', {\n              first_name: firstName,\n              last_name: lastName,\n              email: email,\n              street_number: streetNumber,\n              street_name: streetName,\n              city,\n              state,\n              country,\n              postal_code: postalCode,\n              date_of_birth: dateOfBirth,\n              phone_number: phoneNumber,\n              cell_number: cellNumber,\n              picture_large: pictureLarge,\n              picture_thumbnail: pictureThumbnail\n            }); //console.log(response);\n            //await addEmployees(response.data.data.employee);\n          } catch (error) {\n            console.log(error);\n          }\n        };\n\n        finishCreatingData();\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        id: \"fetchButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          type: \"button\",\n          id: \"fetch\",\n          className: \"btn btn-primary\",\n          children: \"Populate Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReset,\n            type: \"button\",\n            id: \"1\",\n            className: \"btn btn-primary\",\n            children: \"Clear Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FetchEmployees, \"a56ldOYpRNeLs6V0e6sGiiucqww=\");\n\n_c = FetchEmployees;\nexport default FetchEmployees;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchEmployees\");","map":{"version":3,"sources":["/Users/owenbarrott/Documents/nodeProjects/employees/client/src/components/FetchEmployees.jsx"],"names":["React","useState","useContext","EmployeeFinder","EmployeesContext","useHistory","FetchEmployees","addEmployees","handleReset","response","router","get","console","log","handleClick","e","preventDefault","i","randomUserGenerator","fetch","then","json","data","results","map","employee","firstName","name","first","lastName","last","email","streetNumber","location","street","number","streetName","city","state","country","postalCode","postcode","dateOfBirth","dob","date","phoneNumber","phone","cellNumber","cell","pictureLarge","picture","large","pictureThumbnail","thumbnail","finishCreatingData","post","first_name","last_name","street_number","street_name","postal_code","date_of_birth","phone_number","cell_number","picture_large","picture_thumbnail","error"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\n//import RandomUser from '../apis/RandomUser';\nimport EmployeeFinder from '../apis/EmployeeFinder';\nimport { EmployeesContext } from '../contexts/EmployeesContext';\nimport { useHistory } from \"react-router-dom\"\n\nconst FetchEmployees = () => {\n  const { addEmployees } = useContext(EmployeesContext);\n\nconst handleReset = () => {\n    const response = router.get('/clear');\n    console.log( response);\n};\n\nconst handleClick = async (e) => {\n  e.preventDefault();\n    var i = 0;\n\n    while (i<1) {\n      await randomUserGenerator()\n      await i++;}\n};\n\nconst randomUserGenerator = async () => {\n  await fetch('https://randomuser.me/api/?results=3500')\n  .then((response) => {\n      return response.json()\n  }).then((data) => {\n      console.log(data)\n      data.results.map(employee => {\n      const firstName = employee.name.first;\n      const lastName = employee.name.last;\n      const email = employee.email;\n      const streetNumber = employee.location.street.number;\n      const streetName = employee.location.street.name;\n      const city = employee.location.city;\n      const state = employee.location.state;\n      const country = employee.location.country;\n      const postalCode = employee.location.postcode;\n      const dateOfBirth = employee.dob.date;\n      const phoneNumber = employee.phone;\n      const cellNumber = employee.cell;\n      const pictureLarge = employee.picture.large;\n      const pictureThumbnail = employee.picture.thumbnail;      \n\n      const finishCreatingData = async () => {\n        try {\n          const response = await EmployeeFinder.post('/', {\n        first_name: firstName,\n        last_name: lastName,\n        email: email,\n        street_number: streetNumber,\n        street_name: streetName, \n        city, \n        state, \n        country, \n        postal_code: postalCode,\n        date_of_birth: dateOfBirth,\n        phone_number: phoneNumber,\n        cell_number: cellNumber,\n        picture_large: pictureLarge,\n        picture_thumbnail: pictureThumbnail\n\n      }\n      );\n      //console.log(response);\n      //await addEmployees(response.data.data.employee);\n        } catch (error) {\n            console.log(error);\n        }\n      \n    }\n    finishCreatingData();\n  }\n    );\n  })\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <form action=\"\">\n        <div className=\"form-row\" id=\"fetchButton\">\n            <button onClick={handleClick} type=\"button\" id=\"fetch\" className=\"btn btn-primary\">Populate Database</button>\n            <div className=\"col-md-5\">\n            <button onClick={handleReset} type=\"button\" id=\"1\" className=\"btn btn-primary\">Clear Database</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n};\n\nexport default FetchEmployees;"]},"metadata":{},"sourceType":"module"}